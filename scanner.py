import requests
import re
import urlparse
from bs4 import BeautifulSoup


class Scanner:
    def __init__(self,url,ignore_links):
        self.session=requests.Session()
        self.target_url=url
        self.target_links = []
        self.links_to_ignore=ignore_links

    def extract_link(self,url):
        response = self.session.get(url)
        return re.findall('(?:href=")(.*?)"', response.content.decode(errors="ignore"))

    def crawl(self,url=None):
        if url==None:
            url=self.target_url
        href_links = self.extract_link(url)
        for link in href_links:
            link = urlparse.urljoin(url, link)

            if "#" in link:
                link = link.split("#")[0]
            if url in link and link not in self.target_links and link not in self.links_to_ignore:
                self.target_links.append(link)
                print(link)
                self.crawl(link)


    def extract_forms(self,url):
        response = self.session.get(url)
        parsed_html = BeautifulSoup(response.content, features="lxml")
        return parsed_html.findAll("form")

    def submit_forms(self,form,value,url,):
        action = form.get("action")
        url = urlparse.urljoin(url, action)
        method = form.get("method")
        post_data = {}
        input_list = form.findAll("input")
        for input in input_list:
            input_name = input.get("name")
            input_type = input.get("type")
            input_value = input.get("value")
            if input_type == "text":
                input_value = value
            post_data[input_name] = input_value
        if method=="post":
            result = self.session.post(url, data=post_data)
        else:
            result = self.session.get(url, params=post_data)
        return result

    def run_scanner(self):
        for link in self.target_links:
            forms=self.extract_forms(link)
            for form in forms:
                print("\n\n[+] Testing form in "+ link)
                is_vulnerable_to_xss =self.test_xss_in_form(form,link)
                if is_vulnerable_to_xss:
                    print("\n\nXSS vulnerability is present in " + link + " in the following form")
                    print(form)

            if "=" in link:
                print("\n\n[+] Testing " +link)
                is_vulnerable_to_xss=self.test_xss_link(link)
                if is_vulnerable_to_xss:
                    print("[+] XSS vulnerability is present in link")

    def test_xss_link(self,url):
        xss_test_script = "<sCripT>prompt('Hello')</ScriPt>"
        url = url.replace("=", "=" + xss_test_script)
        response=self.session.get(url)

        return xss_test_script in response.content


    def test_xss_in_form(self,form,url):
        xss_test_script="<sCripT>prompt('Hello')</ScriPt>"

        response=self.submit_forms(form,xss_test_script,url)


        return xss_test_script in response.content



